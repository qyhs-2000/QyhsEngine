#pragma once
#include "shader/shader_interop_renderer.h"
namespace qyhs::enums
{

	enum BLENDMODE
	{
		BLENDMODE_OPAQUE,
		BLENDMODE_ALPHA,
		BLENDMODE_PREMULTIPLIED,
		BLENDMODE_ADDITIVE,
		BLENDMODE_MULTIPLY,
		BLENDMODE_COUNT
	};

	enum RENDERPASS
	{
		RENDERPASS_MAIN,
		/*RENDERPASS_PREPASS,
		RENDERPASS_PREPASS_DEPTHONLY,*/
		RENDERPASS_COUNT
	};

	enum
	{
		DSSTYPE_DEFAULT,
		DSSTYPE_HOLOGRAM,
		DSSTYPE_COUNT
	};

	enum
	{
		RASTERIZER_STATE_TYPE_FRONT,
		RASTERIZER_STATE_TYPE_BACK,
		RASTERIZER_STATE_TYPE_DOUBLE_SIDE,
		RASTERIZER_STATE_TYPE_COUNT
	};

	enum
	{
		BLEND_STATE_TYPE_ADDITIVE,
		BLEND_STATE_TYPE_OPAQUE,
		BLEND_STATE_TYPE_ALPHA,
		BLEND_STATE_TYPE_PREMULTIPLIED,
		BLEND_STATE_TYPE_MULTIPLY,
		BLEND_STATE_TYPE_COUNT
	};

	enum SHADER_TYPE
	{
		//vertex shader
		VS_OBJECT_COMMON_VS,
		VS_OBJECT_SIMPLE_VS,
		VS_OBJECT_TESSELLATION_VS,
		VS_OBJECT_PREPASS_ALPHATEST_TESSELLATION,
		VS_OBJECT_PREPASS_TESSELLATION,
		VSTYPE_OBJECT_PREPASS_ALPHATEST,
		VSTYPE_OBJECT_PREPASS,
		//pixel shader
		PS_OBJECT_COMMON_PS,
		// pixel shaders
		PSTYPE_OBJECT_PERMUTATION_BEGIN,
		PSTYPE_OBJECT_PERMUTATION_END = PSTYPE_OBJECT_PERMUTATION_BEGIN + SHADERTYPE_BIN_COUNT,
		PSTYPE_OBJECT_TRANSPARENT_PERMUTATION_BEGIN,
		PSTYPE_OBJECT_TRANSPARENT_PERMUTATION_END = PSTYPE_OBJECT_TRANSPARENT_PERMUTATION_BEGIN + SHADERTYPE_BIN_COUNT,
		PSTYPE_OBJECT_PREPASS_ALPHATEST,
		PSTYPE_OBJECT_PREPASS,
		PSTYPE_OBJECT_PREPASS_DEPTHONLY_ALPHATEST,
		PSTYPE_OBJECT_PREPASS_DEPTHONLY,
		SHADER_TYPE_COUNT
	};

	enum SAMPLERTYPES
	{
		// Can be changed by user
		SAMPLER_OBJECTSHADER,

		// Persistent samplers
		// These are bound once and are alive forever
		SAMPLER_LINEAR_CLAMP,
		SAMPLER_LINEAR_WRAP,
		SAMPLER_LINEAR_MIRROR,
		SAMPLER_POINT_CLAMP,
		SAMPLER_POINT_WRAP,
		SAMPLER_POINT_MIRROR,
		SAMPLER_ANISO_CLAMP,
		SAMPLER_ANISO_WRAP,
		SAMPLER_ANISO_MIRROR,
		SAMPLER_CMP_DEPTH,

		SAMPLER_COUNT,
	};
}